First(Number)          = IntegerLiteral
First(Boolean)         = BooleanTrue BooleanFalse
First(Literal)         = IntegerLiteral BooleanTrue BooleanFalse
First(ActualsTail>     = , e
First(NonEmptyActuals> = First(Expr)
                       = if not Identfier IntegerLiteral BooleanTrue BooleanFalse - (
First(Actuals)         = e First(NonEmptyActuals)
First(FuncTail)        = ( e
First(Func)            = Identfier
First(Factor)          = if not First(Func) First(Literal) - (
                       = if not Identfier IntegerLiteral BooleanTrue BooleanFalse - (
First(FactorTail)      = and * / e
First(Term)            = First(Factor)
                       = if not Identfier IntegerLiteral BooleanTrue BooleanFalse - (
First(TermTail)        = or + - e
First(Simple-Expr)     = First(Term)
                       = if not Identfier IntegerLiteral BooleanTrue BooleanFalse - (
First(SimpleExprTail)  = < = e
First(Expr)            = First(Simple-Expr)
                       = if not Identfier IntegerLiteral BooleanTrue BooleanFalse - (
First(Type)            = integer boolean
First(Body)            = First(Print) First(Expr)
                       = print if not Identfier IntegerLiteral BooleanTrue BooleanFalse - (
First(Formal)          = Identifier
First(FormalTail)      = , e
First(NonEptyFormals)  = First(Formal)
                       = Identifier
First(Formals)         = e First(NonEmptyForamls)
                       = e Identifier
First(Def)             = Identifier
First(DefTail)         = First(Def) e
                       = Identifier e
First(Program)         = First(Def)
                       = Identifier


Follow(Program)        = End
Follow(DefTail)        = Follow(Program)
                       = End
Follow(Def)            = First(DefTail - e) Follow(Program) Follow(DefTail)
                       = Identifier End
Follow(Formals)        = ) 
Follow(NonEmptyformals)= Follow(Formals)
                       = )
Follow(FormalTail)     = Follow(NonEmptyFormals)
                       = )
Follow(Formal)         = First(FormalTail - e) Follow(NonEmptyFormals) Follow(FormalTail)
                       = , )
Follow(Body)           = 
Follow(Type)           = First(Body - e) Follow(Formal)
                       = print if not Identfier IntegerLiteral BooleanTrue BooleanFalse - ( , )
Follow(Expr)           = Follow(Body) then else ) Follow(Factor) First(ActualsTail - e) Follow(NonEmptyActuals) Follow(ActualsTail)
                       =              then else ) Follow(Factor) , Follow(NonEmptyActuals) Follow(ActualsTail)
                       =              then else ) and * /  or + - < = , 
Follow(SimpleExprTail) = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(Simple-Expr)    = First(SimpleExprTail - e) Follow(Expr) Follow(SimpleExprTail)
                       = < = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(TermTail)       = Follow(Simple-Expr) 
                       = < = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(Term)           = First(TermTail) Follow(Simple-Expr) Follow(TermTail) 
                       = or + - < = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(FactorTail)     = Follow(Term) 
                       = or + - < = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(Factor)         = First(FactorTail -e) Follow(Term) 
                       = and * /  or + - < = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(Func)           = Follow(Factor)
                       = and * /  or + - < = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(FuncTail)       = Follow(Func)
                       = and * /  or + - < = Follow(Expr)
                       = then else ) and * /  or + - < = , 
Follow(Actuals)        = )
Follow(NonEmptyActuals)= Follow(Actuals)
                       = )
Follow(ActualsTail)    = Follow(NonEmptyActuals) 
                       = )
Follow(Literal)        = Follow(Factor)
                       = then else ) and * /  or + - < = , 
Follow(Print)          = First(Body - e) 
                       = print if not Identfier IntegerLiteral BooleanTrue BooleanFalse - (
