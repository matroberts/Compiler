
R1      <Program>             ::= <Def> <DefTail> MakeProgram                               
R2      <DefTail>             ::= <Def> <DefTail>
R3                              | e                                                         
R4      <Def>                 ::= <Identifier> MakeIdentifier ( <Formals> ) : <Type> <Body> MakeDefinition
R5      <Formals>             ::= e
R6                              | <NonEmptyFormals>
R7      <NonEmptyFormals>     ::= <Formal><FormalTail>                                      
R8      <FormalTail>          ::= , <Formal><FormalTail>
R9                              | e
R10     <Formal>              ::= <Identifier> MakeIdentifier : <Type> MakeFormal
R11     <Body>                ::= <Print> <Body>
R12                             | <Expr> MakeBody
R13     <Type>                ::= integer MakeIntegerTypeDeclaration
R14                             | boolean MakeBooleanTypeDeclaration
R15     <Expr>                ::= <Simple-Expr> <SimpleExprTail>                            
R16     <SimpleExprTail>      ::= < PushPosition <Simple-Expr> MakeLessThan <SimpleExprTail>
R17                             | = PushPosition <Simple-Expr> MakeEquals <SimpleExprTail>
R18                             | e
R19     <Simple-Expr>         ::= <Term> <TermTail>                                         
R20     <TermTail>            ::= or PushPosition <Term> MakeOr <TermTail>
R21                             | + PushPosition <Term> MakePlus <TermTail>
R22                             | - PushPosition <Term> MakeMinus <TermTail>
R23                             | e
R24     <Term>                ::= <Factor><FactorTail>                                      
R25     <FactorTail>          ::= and PushPosition <Factor> MakeAnd <FactorTail>
R26                             | * PushPosition <Factor> MakeTimes <FactorTail>
R27                             | / PushPosition <Factor> MakeDivide <FactorTail>
R28                             | e
R29     <Factor>              ::= if PushPosition <Expr> then <Expr> else <Expr> MakeIfThenElse
R30                             | not PushPosition <Factor> MakeNot
R31                             | <Func>
R32                             | <Literal>
R33                             | - PushPosition <Factor> MakeNegate
R34                             | ( <Expr> )
R35    <Func>                 ::= <Identifier> MakeIdentifier <FuncTail>
R36    <FuncTail>             ::= ( <Actuals> ) MakeFunctionCall
R37                             | e
R38    <Actuals>              ::= e
R39                             | <NonEmptyActuals>
R40    <NonEmptyActuals>      ::= <Expr> MakeActual <ActualsTail>                                       
R41    <ActualsTail>          ::= , <Expr> MakeActual <ActualsTail>
R42                             | e
R43    <Literal>              ::= <Number>       MakeIntegerLiteral
R44                             | <BooleanTrue>  MakeBooleanTrueLiteral
R45                             | <BooleanFalse> MakeBooleanFalseLiteral
R46    <Print>                ::= print ( <Expr> ) MakePrint                                                                        
